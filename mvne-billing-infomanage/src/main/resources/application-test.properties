spring.application.name=mvne-billing-infomanage-test
server.port=4005

#eureka.client.serviceUrl.defaultZone=http://192.168.127.46:8089/eureka/
eureka.client.serviceUrl.defaultZone=http://10.248.63.79:8089/eureka/
eureka.instance.prefer-ip-address=true


spring.cloud.config.enabled=true

#服务续约
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90

#依赖隔离


#断路器
feign.hystrix.enabled=true
#feign.client.config.mvne-billing-credit-control.connect-timeout=360000
#feign.client.config.mvne-billing-credit-control.read-timeout=360000

#服务降级
hystrix.command.default.fallback.enabled=true

#重试
spring.cloud.loadbalancer.retry.enabled=true

#数据源
#需要设定数据库的时区，同时设定JDBC连接串的时区
spring.datasource.url=jdbc:mysql://10.248.63.38:3306/billing?useUnicode=true&characterEncoding=UTF-8&useAffectedRows=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&useSSL=false&serverTimezone=GMT%2b8
spring.datasource.username=mvnedba
spring.datasource.password=1qaz@WSX
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# druid 连接池配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.initial-size=10
spring.datasource.druid.min-idle=10
spring.datasource.druid.maxActive=50
spring.datasource.druid.maxWait=15000
spring.datasource.druid.timeBetweenEvictionRunsMillis=6000
spring.datasource.druid.minEvictableIdleTimeMillis=300000

# 线程池配置参数
yellow-mobile.thread.pool.corePoolSize=10
yellow-mobile.thread.pool.maxPoolSize=10
yellow-mobile.thread.pool.QueueCapacity=100000
yellow-mobile.thread.pool.keepAliveSeconds=60
yellow-mobile.thread.pool.namePrefix=InfoManage-

mybatis-plus.type-aliases-package=com.cmit.mvne.billing.infomanage.entity,com.cmit.mvne.billing.infomanage.job.entity
mybatis-plus.mapper-locations=classpath*:mapper/*/*.xml,classpath*:mapper/*.xml
mybatis-plus.configuration.default-statement-timeout=10

#Redis配置
spring.redis.host=10.248.63.39
spring.redis.port=8700
spring.redis.password=yellow
spring.redis.timeout=50000

# redis哨兵配置
lettuce.sentinel.master=mymaster-1
lettuce.sentinel.nodes=10.248.63.39:8800,10.248.63.39:8801,10.248.63.39:8802
lettuce.sentinel.node1=10.248.63.39
lettuce.sentinel.port1=8800
lettuce.sentinel.node2=10.248.63.39
lettuce.sentinel.port2=8801
lettuce.sentinel.node3=10.248.63.39
lettuce.sentinel.port3=8802

# lettuce线程池配置
lettuce.pool.maxTotal=5
lettuce.pool.maxIdle=2
lettuce.pool.minIdle=2

# redisson配置
# 尝试获取锁的时间
# 等待时间 > (最多同时处理订单数 * 单条处理最大时间），计费这里的时间要调小一点，因为不等待也能被处理。
yellow-mobile.redis.redisson.wait-time=180
# 上锁后自动解锁时间
yellow-mobile.redis.redisson.lease-time=60
# 尝试获取锁的重试间隔，单位毫秒
yellow-mobile.redis.redisson.try-interval=1000
# 尝试获取锁的次数
yellow-mobile.redis.redisson.try-times=5

# 配置信控的ribbon负载均衡
# 建立连接的最长时间。如果在该时间内无法与服务建立连接，则调用降级服务
mvne-billing-credit-control.ribbon.eureka.enabled=true
mvne-billing-credit-control.ribbon.ConnectTimeout=36000
mvne-billing-credit-control.ribbon.ReadTimeout=36000
mvne-billing-credit-control.ribbon.OkToRetryOnAllOperations= true
mvne-billing-credit-control.ribbon.MaxAutoRetriesNextServer= 1
mvne-billing-credit-control.ribbon.MaxAutoRetries=0

# lettuce配置
# 连接池最大连接数 默认8 ，负数表示没有限制
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认-1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认0
spring.redis.lettuce.pool.min-idle=0

#余额阀值
feeThreshold=2
logging.level.com.cmit.mvne.billing.user.analysis.mapper=debug
#logging.config=/app/mvne_billing/mvne-info-manage/conf/logback-spring-dev.xml
logging.config=classpath:logback-spring-dev.xml